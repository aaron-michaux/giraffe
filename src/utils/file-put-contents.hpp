
#pragma once

#include <cstdio>
#include <string_view>
#include <system_error>

namespace giraffe
{

/**
 * @brief Writes `dat` to file `filename`.
 *
 * Error codes:
 * + std::errc::not_enough_memory A call to malloc failed.
 * + Any of the errors generated by `fwrite()`
 * + Any of the errors generated by `fclose()`
 * +
 */
inline std::error_code file_put_contents(const std::string_view fname,
                                         const std::string_view dat) noexcept
{
   auto filename = std::string{begin(fname), end(fname)};
   FILE* fp      = std::fopen(filename.c_str(), "wb");
   if(fp == nullptr) return std::make_error_code(std::errc(errno));

   std::error_code ec = {};

   auto sz = std::fwrite(dat.data(), 1, dat.size(), fp);
   if(sz != dat.size()) {
      if(ferror(fp))
         ec = std::make_error_code(std::errc(errno));
      else
         ec = std::make_error_code(std::errc::io_error);
   }

   if(std::fclose(fp) != 0)
      if(!ec) ec = make_error_code(std::errc(errno));

   return ec;
}

} // namespace giraffe
